{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Order } from 'src/app/shared/models/Order';\nimport { TitleComponent } from '../../partials/title/title.component';\nimport { TextInputComponent } from '../../partials/text-input/text-input.component';\nimport { OrderItemsListComponent } from '../../partials/order-items-list/order-items-list.component';\nlet CheckoutPageComponent = class CheckoutPageComponent {\n  constructor(cartService, formBuilder, userService, toastrService, orderService, router) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.toastrService = toastrService;\n    this.orderService = orderService;\n    this.router = router;\n    this.order = new Order();\n    const cart = cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n  ngOnInit() {\n    let {\n      name,\n      address\n    } = this.userService.currentUser;\n    this.checkoutForm = this.formBuilder.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n  get fc() {\n    return this.checkoutForm.controls;\n  }\n  createOrder() {\n    if (this.checkoutForm.invalid) {\n      this.toastrService.warning('Please fill the inputs', 'Invalid Inputs');\n      return;\n    }\n    if (!this.order.addressLatLng) {\n      this.toastrService.warning('Please select your location on the map', 'Location');\n      return;\n    }\n    this.order.name = this.fc.name.value;\n    this.order.address = this.fc.address.value;\n    this.orderService.create(this.order).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/payment');\n      },\n      error: errorResponse => {\n        this.toastrService.error(errorResponse.error, 'Cart');\n      }\n    });\n  }\n};\nCheckoutPageComponent = __decorate([Component({\n  selector: 'app-checkout-page',\n  standalone: true,\n  imports: [TitleComponent, TextInputComponent, OrderItemsListComponent],\n  templateUrl: './checkout-page.component.html',\n  styleUrls: ['./checkout-page.component.css']\n})], CheckoutPageComponent);\nexport { CheckoutPageComponent };","map":{"version":3,"names":["Component","Validators","Order","TitleComponent","TextInputComponent","OrderItemsListComponent","CheckoutPageComponent","constructor","cartService","formBuilder","userService","toastrService","orderService","router","order","cart","getCart","items","totalPrice","ngOnInit","name","address","currentUser","checkoutForm","group","required","fc","controls","createOrder","invalid","warning","addressLatLng","value","create","subscribe","next","navigateByUrl","error","errorResponse","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\EXO ANGULAR\\foodmine-course-master\\frontend\\src\\app\\components\\pages\\checkout-page\\checkout-page.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from 'src/app/services/cart.service';\nimport { OrderService } from 'src/app/services/order.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Order } from 'src/app/shared/models/Order';\nimport { TitleComponent } from '../../partials/title/title.component';\nimport { TextInputComponent } from '../../partials/text-input/text-input.component';\nimport { OrderItemsListComponent } from '../../partials/order-items-list/order-items-list.component';\n\n@Component({\n  selector: 'app-checkout-page',\n  standalone: true,\n  imports:[\n    TitleComponent,\n    TextInputComponent,\n    OrderItemsListComponent,\n    \n  ],\n  templateUrl: './checkout-page.component.html',\n  styleUrls: ['./checkout-page.component.css']\n})\nexport class CheckoutPageComponent implements OnInit {\n  order:Order = new Order();\n  checkoutForm!: FormGroup;\n  constructor(cartService:CartService,\n              private formBuilder: FormBuilder,\n              private userService: UserService,\n              private toastrService: ToastrService,\n              private orderService: OrderService,\n              private router: Router) {\n                const cart = cartService.getCart();\n                this.order.items = cart.items;\n                this.order.totalPrice = cart.totalPrice;\n              }\n\n  ngOnInit(): void {\n    let {name, address} = this.userService.currentUser;\n    this.checkoutForm = this.formBuilder.group({\n      name:[name, Validators.required],\n      address:[address, Validators.required]\n    });\n  }\n\n  get fc(){\n    return this.checkoutForm.controls;\n  }\n\n  createOrder(){\n    if(this.checkoutForm.invalid){\n      this.toastrService.warning('Please fill the inputs', 'Invalid Inputs');\n      return;\n    }\n\n    if(!this.order.addressLatLng){\n      this.toastrService.warning('Please select your location on the map', 'Location');\n      return;\n    }\n\n    this.order.name = this.fc.name.value;\n    this.order.address = this.fc.address.value;\n\n    this.orderService.create(this.order).subscribe({\n      next:() => {\n        this.router.navigateByUrl('/payment');\n      },\n      error:(errorResponse) => {\n        this.toastrService.error(errorResponse.error, 'Cart');\n      }\n    })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAMnE,SAASC,KAAK,QAAQ,6BAA6B;AACnD,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,kBAAkB,QAAQ,gDAAgD;AACnF,SAASC,uBAAuB,QAAQ,4DAA4D;AAcpG,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAGhCC,YAAYC,WAAuB,EACfC,WAAwB,EACxBC,WAAwB,EACxBC,aAA4B,EAC5BC,YAA0B,EAC1BC,MAAc;IAJd,KAAAJ,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IAP1B,KAAAC,KAAK,GAAS,IAAIZ,KAAK,EAAE;IAQX,MAAMa,IAAI,GAAGP,WAAW,CAACQ,OAAO,EAAE;IAClC,IAAI,CAACF,KAAK,CAACG,KAAK,GAAGF,IAAI,CAACE,KAAK;IAC7B,IAAI,CAACH,KAAK,CAACI,UAAU,GAAGH,IAAI,CAACG,UAAU;EACzC;EAEZC,QAAQA,CAAA;IACN,IAAI;MAACC,IAAI;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACX,WAAW,CAACY,WAAW;IAClD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACd,WAAW,CAACe,KAAK,CAAC;MACzCJ,IAAI,EAAC,CAACA,IAAI,EAAEnB,UAAU,CAACwB,QAAQ,CAAC;MAChCJ,OAAO,EAAC,CAACA,OAAO,EAAEpB,UAAU,CAACwB,QAAQ;KACtC,CAAC;EACJ;EAEA,IAAIC,EAAEA,CAAA;IACJ,OAAO,IAAI,CAACH,YAAY,CAACI,QAAQ;EACnC;EAEAC,WAAWA,CAAA;IACT,IAAG,IAAI,CAACL,YAAY,CAACM,OAAO,EAAC;MAC3B,IAAI,CAAClB,aAAa,CAACmB,OAAO,CAAC,wBAAwB,EAAE,gBAAgB,CAAC;MACtE;;IAGF,IAAG,CAAC,IAAI,CAAChB,KAAK,CAACiB,aAAa,EAAC;MAC3B,IAAI,CAACpB,aAAa,CAACmB,OAAO,CAAC,wCAAwC,EAAE,UAAU,CAAC;MAChF;;IAGF,IAAI,CAAChB,KAAK,CAACM,IAAI,GAAG,IAAI,CAACM,EAAE,CAACN,IAAI,CAACY,KAAK;IACpC,IAAI,CAAClB,KAAK,CAACO,OAAO,GAAG,IAAI,CAACK,EAAE,CAACL,OAAO,CAACW,KAAK;IAE1C,IAAI,CAACpB,YAAY,CAACqB,MAAM,CAAC,IAAI,CAACnB,KAAK,CAAC,CAACoB,SAAS,CAAC;MAC7CC,IAAI,EAACA,CAAA,KAAK;QACR,IAAI,CAACtB,MAAM,CAACuB,aAAa,CAAC,UAAU,CAAC;MACvC,CAAC;MACDC,KAAK,EAAEC,aAAa,IAAI;QACtB,IAAI,CAAC3B,aAAa,CAAC0B,KAAK,CAACC,aAAa,CAACD,KAAK,EAAE,MAAM,CAAC;MACvD;KACD,CAAC;EACJ;CACD;AAjDY/B,qBAAqB,GAAAiC,UAAA,EAZjCvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,mBAAmB;EAC7BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAC,CACNvC,cAAc,EACdC,kBAAkB,EAClBC,uBAAuB,CAExB;EACDsC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWtC,qBAAqB,CAiDjC;SAjDYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}